apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
  namespace: gmi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: backend
    spec:
      containers:
        - command: ["bash", "./wait-for-it.sh", "db:5432", "--timeout=0", "--strict", "--", "bash", "./start-backend.sh"]
          env:
             - name: DB_USER
               value: "admin"
             - name: DB_PASS
               value: "admin"
             - name: DB_NAME
               value: "dedb"
             - name: DB_HOST
               value: "db"
             - name: DB_PORT
               value: "5432"
             - name: DEV_DB_HOST
               value: "db"
             - name: POSTGRES_USER
               value: "postgres"
             - name: POSTGRES_DB
               value: "postgres"
             - name: APP_DB_NAME
               value: "dedb"
             - name: APP_DB_USER
               value: "admin"
          image: registry.gitlab.com/de4512928/saas/backend:latest
          imagePullPolicy: Always
          name: backend
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources: {}
      imagePullSecrets: 
        - name: registry-credentials
      restartPolicy: Always
status: {}
