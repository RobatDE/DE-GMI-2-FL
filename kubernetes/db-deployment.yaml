apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
  namespace: gmi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: dedb
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata/
            - name: POSTGRES_USER
              value: postgresExpona
            - name: POSTGRES_PASSWORD
              value: ExponaPassword1234
            - name: APP_DB_NAME
              value: dedb
            - name: APP_DB_USER
              value: expona 
            - name: APP_DB_PASS
              value: ExponaPassword1234              
          image: postgres:16.2
          imagePullPolicy: Always
          name: db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-claim0
            - mountPath: /docker-entrypoint-initdb.d
              name: dedb-initdb
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
        - name: dedb-initdb
          configMap:
            name: dedb-initdb-config
status: {}
